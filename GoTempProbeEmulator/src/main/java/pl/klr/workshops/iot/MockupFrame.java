
package pl.klr.workshops.iot;

import pl.klr.workshops.iot.kafka.KafkaPublisher;

import java.awt.event.KeyEvent;

/**
 *
 * @author lromasze
 */
public class MockupFrame extends javax.swing.JFrame {
    private TemperatureMockup mockup;

    /** Creates new form MockupFrame */
    public MockupFrame() {
        initComponents();
    }

    public MockupFrame(TemperatureMockup mockup) {
        initComponents();
        this.mockup = mockup;
        jFormattedTextField1.setValue(mockup.getCurrentTemperature());
    }

    public void setMockup(TemperatureMockup mockup) {
        this.mockup = mockup;
    }

    public TemperatureMockup getMockup() {
        return mockup;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperature Mockup");
        setResizable(false);

        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField1.setText("26");
        jFormattedTextField1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jFormattedTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("Up");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Down");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        riseTheTemperature(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        lowerTheTemperature(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextField1KeyPressed
        handleArrowKeys(evt.getKeyCode());
    }//GEN-LAST:event_jFormattedTextField1KeyPressed

    private void handleArrowKeys(int keyCode) {
        switch (keyCode) {
        case KeyEvent.VK_UP:
            riseTheTemperature(1);
            break;
        case KeyEvent.VK_DOWN:
            lowerTheTemperature(1);
            break;
        }
    }
    private void lowerTheTemperature(int byWhat) {
        double ct = mockup.getCurrentTemperature();
        ct = ct - byWhat;
        mockup.setCurrentTemperature(ct);
        jFormattedTextField1.setValue(ct);
    }
    
    private void riseTheTemperature(int byWhat) {
        double ct = mockup.getCurrentTemperature();
        ct = ct + byWhat;
        mockup.setCurrentTemperature(ct);
        jFormattedTextField1.setValue(ct);    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MockupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MockupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MockupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MockupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                ex);
        }
        //</editor-fold>

        final String sensorId;
        
        if (args.length > 0) {
            sensorId = args[0];
        } else {
            sensorId = TemperatureMockup.getId() + "-mockup";
        }

        final KafkaPublisher publisher = new KafkaPublisher();
        final TemperatureMockup mockup = new TemperatureMockup(publisher);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mockup.start(sensorId);
                new MockupFrame(mockup).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    // End of variables declaration//GEN-END:variables

}
